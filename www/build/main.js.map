{"version":3,"sources":["../../src/pages/login/login.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/auth-service/auth-service.ts","../../src/providers/barcode/barcode.ts","../../src/components/components.module.ts","../../src/pages/terms-and-conditions/terms-and-conditions.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/components/alert-view/alert-view.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service';\n\n/**\n * Generated class for the LoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  providers: [AuthServiceProvider]\n})\nexport class LoginPage {\n\n  user: any;\n  service:any;\n\n  constructor(public navCtrl: NavController,\n               public navParams: NavParams, \n               public authServiceProvider: AuthServiceProvider) {\n    console.log(authServiceProvider.http);\n    this.user = {\n      pass: ''\n    };\n  this.service=authServiceProvider;\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n  navigateToProcess() {\n    this.navCtrl.push(\"ProcessPage\");\n    //this.navCtrl.push(\"ProcessPage\");\n  //  this.service.isValid(this.user.pass).then(data => {\n  //    alert(data.status);\n  //   if(data){\n  //     if(data.status == \"OK\"){\n  //      this.navCtrl.push(\"ProcessPage\");\n  //     }\n  //     else{\n  //       alert(\"Wrong Password\");\n  //     }\n  //   }\n  // })\n    \n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 111\n// module chunks = 3","var map = {\n\t\"../pages/login/login.module\": [\n\t\t281,\n\t\t2\n\t],\n\t\"../pages/process/process.module\": [\n\t\t280,\n\t\t0\n\t],\n\t\"../pages/terms-and-conditions/terms-and-conditions.module\": [\n\t\t282,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 153;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 153\n// module chunks = 3","import {Injectable} from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n/*\n  Generated class for the AuthServiceProvider provider.\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\nlet apiUrl='https://buit-ibu-tw-cialis-id-dev.herokuapp.com/api/app_authentication/';\n\n@Injectable()\nexport class AuthServiceProvider {\n  \n  constructor(public http: Http) {\n    console.log('Hello AuthServiceProvider Provider');\n  }\n\n  isValid(credentials){\n    return new Promise((resolve,reject) => {\n      // let headers= new Headers();\n      // headers.append('Content-Type', 'application/json');\n      // headers.append(\"Accept\", 'application/json');\n      // headers.append('Access-Control-Allow-Origin', '*');\n\n      let headers = {\n        'Content-Type': 'application/json'\n    };\n\n      let data = JSON.stringify({\n        app_authentication_code: credentials\n      });\n\n      this.http.post(apiUrl, data)\n      //this.http.post(apiUrl+credentials,JSON.stringify(credentials),{ headers: headers })\n      .subscribe(res => {\n        console.log(res.json());\n        resolve(res.json());\n        \n      }, (err) => {\n        console.log(err);\n        reject(err);\n\n      }\n    )\n    });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth-service/auth-service.ts","\nimport { Injectable } from '@angular/core';\n\n\n/*\n  Generated class for the BarcodeProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class BarcodeProvider {\n\n  constructor() {\n    console.log('Hello BarcodeProvider Provider');\n  }\n\n  showAlert(){\n    alert(\"Code is scanning\");\n  }\n  // scan(){\n  //   return new Promise((resolve, reject)=>{\n  //     let options: BarcodeScannerOptions = {};\n  //     options.formats = \"DATA_MATRIX\"\n  //     this.barcodeScanner.scan(options).then((barcodeData) => {\n  //       console.log(barcodeData);\n  //       alert(barcodeData);\n  //       resolve(true);\n  //      }, (err) => {\n  //       console.log(err);\n  //       reject(err);\n  //      });\n  //   })\n  // }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/barcode/barcode.ts","import { NgModule } from '@angular/core';\nimport { AlertViewComponent } from './alert-view/alert-view';\nimport { IonicPageModule } from 'ionic-angular';\n@NgModule({\n\tdeclarations: [AlertViewComponent],\n\timports: [IonicPageModule.forChild(AlertViewComponent)],\n\texports: [AlertViewComponent]\n})\nexport class ComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the TermsAndConditionsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-terms-and-conditions',\n  templateUrl: 'terms-and-conditions.html',\n})\nexport class TermsAndConditionsPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad TermsAndConditionsPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/terms-and-conditions/terms-and-conditions.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { Camera } from '@ionic-native/camera';\nimport { HttpModule } from '@angular/http';\n\nimport { LoginPage } from '../pages/login/login';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { AuthServiceProvider } from '../providers/auth-service/auth-service';\nimport { TermsAndConditionsPage } from '../pages/terms-and-conditions/terms-and-conditions';\nimport { ComponentsModule } from '../components/components.module'\nimport { BarcodeProvider } from '../providers/barcode/barcode';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    LoginPage,\n    TermsAndConditionsPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp, {\n      preloadModules: true,\n      platforms: {\n        ios: {\n          statusbarPadding: false\n        }\n      }\n    }),\n    ComponentsModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    LoginPage,\n    TermsAndConditionsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\n    AuthServiceProvider,\n    Camera,\n    BarcodeProvider,\n    BarcodeScanner\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Generated class for the AlertViewComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n  selector: 'alert-view',\n  templateUrl: 'alert-view.html'\n})\nexport class AlertViewComponent {\n\n  @Input('text') text: string;\n  @Input('buttonText') buttonText: string;\n  @Output() buttonClick = new EventEmitter();\n  constructor() {\n    console.log('Hello AlertViewComponent Component');\n  }\n\n  buttonclick(){\n    this.buttonClick.emit();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/alert-view/alert-view.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { LoginPage } from '../pages/login/login';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = LoginPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}